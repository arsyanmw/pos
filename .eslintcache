[{"D:\\Projects\\CODE\\self\\pos-new\\src\\index.js":"1","D:\\Projects\\CODE\\self\\pos-new\\src\\reportWebVitals.js":"2","D:\\Projects\\CODE\\self\\pos-new\\src\\pages\\App.js":"3","D:\\Projects\\CODE\\self\\pos-new\\src\\config\\Routes\\MainStackNavigator.js":"4","D:\\Projects\\CODE\\self\\pos-new\\src\\config\\Routes\\AppStackNavigator.js":"5","D:\\Projects\\CODE\\self\\pos-new\\src\\config\\Routes\\UserStackNavigator.js":"6","D:\\Projects\\CODE\\self\\pos-new\\src\\pages\\App\\Home\\index.js":"7","D:\\Projects\\CODE\\self\\pos-new\\src\\pages\\App\\Produk\\index.js":"8","D:\\Projects\\CODE\\self\\pos-new\\src\\pages\\App\\Analistik\\index.js":"9","D:\\Projects\\CODE\\self\\pos-new\\src\\pages\\App\\Pelanggan\\index.js":"10","D:\\Projects\\CODE\\self\\pos-new\\src\\component\\index.js":"11","D:\\Projects\\CODE\\self\\pos-new\\src\\component\\CardCustom\\index.js":"12","D:\\Projects\\CODE\\self\\pos-new\\src\\pages\\User\\Profile\\index.js":"13"},{"size":668,"mtime":1612510663609,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":134,"mtime":1611766271362,"results":"17","hashOfConfig":"15"},{"size":812,"mtime":1612516547970,"results":"18","hashOfConfig":"15"},{"size":4640,"mtime":1612516586483,"results":"19","hashOfConfig":"15"},{"size":328,"mtime":1612516318356,"results":"20","hashOfConfig":"15"},{"size":8631,"mtime":1612880929219,"results":"21","hashOfConfig":"15"},{"size":9565,"mtime":1612713011702,"results":"22","hashOfConfig":"15"},{"size":6151,"mtime":1612515635715,"results":"23","hashOfConfig":"15"},{"size":3013,"mtime":1612515279832,"results":"24","hashOfConfig":"15"},{"size":64,"mtime":1612268585527,"results":"25","hashOfConfig":"15"},{"size":252,"mtime":1612269026686,"results":"26","hashOfConfig":"15"},{"size":1132,"mtime":1612517520798,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"5107os",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"D:\\Projects\\CODE\\self\\pos-new\\src\\index.js",[],["60","61"],"D:\\Projects\\CODE\\self\\pos-new\\src\\reportWebVitals.js",[],"D:\\Projects\\CODE\\self\\pos-new\\src\\pages\\App.js",[],"D:\\Projects\\CODE\\self\\pos-new\\src\\config\\Routes\\MainStackNavigator.js",["62"],"import {BrowserRouter, Switch, Route, Redirect} from 'react-router-dom';\r\nimport AppStackNavigator from \"./AppStackNavigator\";\r\nimport UserStackNavigator from \"./UserStackNavigator\";\r\n\r\nconst Routes = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route exact path=\"/\">\r\n                    <Redirect to=\"/app\" />\r\n                </Route>\r\n                <Route path=\"/app\">\r\n                    <AppStackNavigator />\r\n                </Route>\r\n\r\n                <Route exact path=\"/user\">\r\n                    <Redirect to=\"/user/profile\" />\r\n                </Route>\r\n                <Route path=\"/user/profile\">\r\n                    <AppStackNavigator />\r\n                </Route>\r\n            </Switch>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default Routes;\r\n","D:\\Projects\\CODE\\self\\pos-new\\src\\config\\Routes\\AppStackNavigator.js",[],"D:\\Projects\\CODE\\self\\pos-new\\src\\config\\Routes\\UserStackNavigator.js",[],"D:\\Projects\\CODE\\self\\pos-new\\src\\pages\\App\\Home\\index.js",["63","64"],"import {useState, useEffect} from \"react\";\r\nimport {\r\n    Row,\r\n    Col,\r\n    Statistic,\r\n    Button,\r\n    Table,\r\n    Modal,\r\n    Form,\r\n    Input,\r\n    DatePicker,\r\n    Select\r\n} from 'antd';\r\nimport {CardCustom} from '../../../component';\r\nimport './home.scss';\r\nimport Axios from 'axios';\r\n\r\nconst {Option} = Select;\r\n\r\nconst Home = () => {\r\n    const [isVisible, setIsVisible] = useState(false);\r\n    const [form, setForm] = useState({\r\n        name: '',\r\n        date: ''\r\n    });\r\n\r\n    useEffect(() => {\r\n        Axios.get('http://127.0.0.1/curl/')\r\n            .then(res => {\r\n                console.log('data', res.data.data)\r\n            })\r\n            .catch(err => console.log(err))\r\n    })\r\n\r\n    const salesCard = [\r\n        {\r\n            title: 'Total Transaksi Pulsa',\r\n            value: 8\r\n        },\r\n        {\r\n            title: 'Total Transaksi Top Up',\r\n            value: 12\r\n        },\r\n        {\r\n            title: 'Total Transaksi Listrik',\r\n            value: 5\r\n        }\r\n    ]\r\n\r\n    // Count total transaction\r\n    let sumTransaction = salesCard.reduce((a, b) => a + b.value, 0);\r\n\r\n    // Data Table\r\n    const columns = [\r\n        {\r\n            title: 'Nama',\r\n            dataIndex: 'name',\r\n            sorter: (a, b) => a.name.length - b.name.length,\r\n            sortDirections: ['descend'],\r\n        },\r\n        {\r\n            title: 'Produk',\r\n            dataIndex: 'product',\r\n            sorter: (a, b) => a.product.length - b.product.length,\r\n            filters: [\r\n                {\r\n                    text: 'Pulsa',\r\n                    value: 'Pulsa'\r\n                },\r\n                {\r\n                    text: 'Listrik',\r\n                    value: 'Listrik'\r\n                },\r\n                {\r\n                    text: 'Top Up',\r\n                    value: 'Top Up'\r\n                }\r\n            ],\r\n            onFilter: (value, record) => record.product.indexOf(value) === 0,\r\n            sortDirections: ['descend', 'ascend'],\r\n            width: '30%'\r\n        },\r\n        {\r\n            title: 'Qty',\r\n            dataIndex: 'qty',\r\n            sorter: (a, b) => a.qty - b.qty,\r\n            sortDirections: ['descend', 'ascend'],\r\n        }\r\n    ];\r\n\r\n    const data = [\r\n        {\r\n            key: '1',\r\n            name: 'Refa',\r\n            product: 'Top Up',\r\n            qty: 10000,\r\n        },\r\n        {\r\n            key: '2',\r\n            name: 'Refa',\r\n            product: 'Listrik',\r\n            qty: 20000,\r\n        },\r\n        {\r\n            key: '3',\r\n            name: 'Refa',\r\n            product: 'Pulsa',\r\n            qty: 10000,\r\n        },\r\n        {\r\n            key: '4',\r\n            name: 'Riski (iki)',\r\n            product: 'Top Up',\r\n            qty: 12000,\r\n        },\r\n    ];\r\n\r\n    // Data Select\r\n    const type = ['Top Up', 'Pulsa', 'Listrik'];\r\n\r\n    return (\r\n        <Row>\r\n            <Col span={24}>\r\n                <Row justify={'space-between'} gutter={[5, 5]}>\r\n                    {salesCard.map((v, i) => (\r\n                        <Col lg={5} sm={12} xs={24} key={i}>\r\n                            <CardCustom>\r\n                                <Statistic title={v.title} value={v.value} />\r\n                            </CardCustom>\r\n                        </Col>\r\n                    ))}\r\n                    <Col lg={5} sm={12} xs={24}>\r\n                        <CardCustom>\r\n                            <Statistic title={'Total Transaksi'} value={sumTransaction} />\r\n                        </CardCustom>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row id=\"tableHome\">\r\n                    <Col span={24}>\r\n                        <Row justify={'end'}>\r\n                            <Col flex={0}>\r\n                                <Button className=\"btnAdd\" onClick={() => setIsVisible(!isVisible)}>Tambah Transaksi</Button>\r\n                            </Col>\r\n\r\n                            <Modal\r\n                                footer={null}\r\n                                visible={isVisible}\r\n                                onOk={() => setIsVisible(!isVisible)}\r\n                                onCancel={() => setIsVisible(!isVisible)}\r\n                                width={'70%'}\r\n                            >\r\n                                <Row justify={\"space-between\"} style={{marginTop: 25}}>\r\n                                    <Col span={24} style={{padding: 10}}>\r\n                                        <Form>\r\n                                            <Row justify={'space-between'}>\r\n                                                <Col lg={10} sm={24}>\r\n                                                    <Form.Item\r\n                                                        label={\"Nama\"}\r\n                                                        name={\"nama\"}\r\n                                                        rules={[{required: true, message: 'Isi dulu namanya!'}]}\r\n                                                    >\r\n                                                        <Input placeholder={\"Nama\"} />\r\n                                                    </Form.Item>\r\n                                                </Col>\r\n                                                <Col lg={10} sm={24}>\r\n                                                    <Form.Item\r\n                                                        label={\"Tanggal\"}\r\n                                                        name={\"date\"}\r\n                                                        rules={[{required: true, message: 'Isi dulu tanggalnya!'}]}\r\n                                                    >\r\n                                                        <DatePicker style={{width: '100%'}}/>\r\n                                                    </Form.Item>\r\n                                                </Col>\r\n                                                <Col lg={10} sm={24}>\r\n                                                    <Form.Item\r\n                                                        label={\"Tipe Transaksi\"}\r\n                                                        name={\"transactionType\"}\r\n                                                        rules={[{required: true, message: 'Isi dulu Tipenya!'}]}\r\n                                                    >\r\n                                                        <Select defaultValue={type[0]}>\r\n                                                            {type.map(t => (\r\n                                                                <Option key={t}>{t}</Option>\r\n                                                            ))}\r\n                                                        </Select>\r\n                                                    </Form.Item>\r\n                                                </Col>\r\n                                                <Col lg={10} sm={24}>\r\n                                                    <Form.Item\r\n                                                        label={\"Qty\"}\r\n                                                        name={\"transactionQty\"}\r\n                                                        rules={[{required: true, message: 'Isi dulu Harganya!'}]}\r\n                                                    >\r\n                                                        <Select defaultValue={type[0]} style={{width: '100%'}}>\r\n                                                            {type.map(t => (\r\n                                                                <Option key={t}>{t}</Option>\r\n                                                            ))}\r\n                                                        </Select>\r\n                                                    </Form.Item>\r\n                                                </Col>\r\n                                            </Row>\r\n                                            <Form.Item>\r\n                                                <Button type={\"primary\"} htmlType={\"submit\"}>Kirim</Button>\r\n                                            </Form.Item>\r\n                                        </Form>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Modal>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col span={24} style={{marginTop: 20}}>\r\n                        <Table columns={columns} dataSource={data} />\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","D:\\Projects\\CODE\\self\\pos-new\\src\\pages\\App\\Produk\\index.js",["65"],"import {useState} from \"react\";\r\nimport {\r\n    Row,\r\n    Col,\r\n    Tabs,\r\n    Table,\r\n    Button,\r\n    Modal,\r\n    Form,\r\n    Select\r\n} from 'antd';\r\nimport { CgSmartphone } from \"react-icons/cg\";\r\nimport { IoFlashOutline } from \"react-icons/io5\";\r\nimport { IoGameControllerOutline } from \"react-icons/io5\";\r\nimport './produk.scss';\r\n\r\nconst {TabPane} = Tabs;\r\n// const {Column} = Table;\r\nconst {Option} = Select;\r\n\r\nconst Produk = () => {\r\n    const [isVisible, setIsVisible] = useState(false);\r\n\r\n    const category = [\r\n        {\r\n            key: 1,\r\n            name: 'pulsa',\r\n            title: 'Pulsa',\r\n            desc: 'Pulsa',\r\n            icon: <CgSmartphone style={{color: '#037E8C'}} />\r\n        },\r\n        {\r\n            key: 2,\r\n            name: 'listrik',\r\n            title: 'Listrik',\r\n            desc: 'Listrik',\r\n            icon: <IoFlashOutline style={{color: '#7EC544'}} />\r\n        },\r\n        {\r\n            key: 3,\r\n            name: 'top_up',\r\n            title: 'Top Up',\r\n            desc: 'Top Up',\r\n            icon: <IoGameControllerOutline style={{color: '#2748AO'}} />\r\n        }\r\n    ];\r\n\r\n    const [tab, setTab] = useState(category[0]);\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Nama Produk',\r\n            dataIndex: 'product_name',\r\n            sorter: (a, b) => a.product_name.length - b.product_name.length,\r\n            sortDirections: ['descend'],\r\n        },\r\n        {\r\n            title: 'Qty',\r\n            dataIndex: 'qty',\r\n            sorter: (a, b) => a.qty - b.qty,\r\n            filters: [\r\n                {\r\n                    text: 'Pulsa',\r\n                    value: 'pulsa'\r\n                },\r\n                {\r\n                    text: 'Listrik',\r\n                    value: 'listrik'\r\n                },\r\n                {\r\n                    text: 'Top Up',\r\n                    value: 'top_up'\r\n                }\r\n            ],\r\n            onFilter: (value, record) => record.type.indexOf(value) === 0,\r\n            sortDirections: ['descend', 'ascend'],\r\n            width: '30%'\r\n        },\r\n        {\r\n            title: 'Price',\r\n            dataIndex: 'price',\r\n            sorter: (a, b) => a.qty - b.qty,\r\n            sortDirections: ['descend', 'ascend'],\r\n        }\r\n    ];\r\n\r\n    // Data Select\r\n    const type = ['Top Up', 'Pulsa', 'Listrik'];\r\n\r\n    const data = [\r\n        {\r\n            key: '1',\r\n            product_name: 'Top Up FF',\r\n            qty: 10000,\r\n            price: 8000,\r\n            type: 'top_up'\r\n        },\r\n        {\r\n            key: '2',\r\n            product_name: 'Pulsa XL',\r\n            qty: 12000,\r\n            price: 10000,\r\n            type: 'pulsa'\r\n        },\r\n        {\r\n            key: '3',\r\n            product_name: 'Listrik',\r\n            qty: 22000,\r\n            price: 20000,\r\n            type: 'listrik'\r\n        },\r\n        {\r\n            key: '4',\r\n            product_name: 'Top Up FF',\r\n            qty: 10000,\r\n            price: 8000,\r\n            type: 'top_up'\r\n        },\r\n\r\n    ];\r\n\r\n    return (\r\n        <Row>\r\n            <Col span={24}>\r\n                <Tabs activeKey={`${tab.key}`} onChange={(e) => {\r\n                    let cat = category.filter(value => value.key == e)[0]\r\n                    return setTab(cat)\r\n                }}>\r\n                    {category.map((v) => (\r\n                        <TabPane\r\n                            key={v.key}\r\n                            tab={\r\n                                <Row>\r\n                                    <Col span={10}>{v.icon}</Col>\r\n                                    <Col span={10}>{v.title}</Col>\r\n                                </Row>\r\n                            }\r\n                        >\r\n                            <Row>\r\n                                <Col span={24}>\r\n                                    <Row justify={\"end\"}>\r\n                                        <Col flex={0}>\r\n                                            <Button className=\"btnAdd\" onClick={() => setIsVisible(!isVisible)}>Tambah Transaksi</Button>\r\n                                        </Col>\r\n\r\n                                        <Modal\r\n                                            footer={null}\r\n                                            visible={isVisible}\r\n                                            onOk={() => setIsVisible(!isVisible)}\r\n                                            onCancel={() => setIsVisible(!isVisible)}\r\n                                            width={'70%'}\r\n                                        >\r\n                                            <Row justify={\"space-between\"} style={{marginTop: 25}}>\r\n                                                <Col span={24} style={{padding: 10}}>\r\n                                                    <Form>\r\n                                                        <Row justify={'space-between'}>\r\n                                                            <Col lg={10} sm={24}>\r\n                                                                <Form.Item\r\n                                                                    label={\"Nama Produk\"}\r\n                                                                    name={\"productName\"}\r\n                                                                    rules={[{required: true, message: 'Isi dulu nama produknya!'}]}\r\n                                                                >\r\n                                                                    <Select defaultValue={type[0]}>\r\n                                                                        {type.map(t => (\r\n                                                                            <Option key={t}>{t}</Option>\r\n                                                                        ))}\r\n                                                                    </Select>\r\n                                                                </Form.Item>\r\n                                                            </Col>\r\n                                                            <Col lg={10} sm={24}>\r\n                                                                <Form.Item\r\n                                                                    label={\"Qty\"}\r\n                                                                    name={\"qty\"}\r\n                                                                    rules={[{required: true, message: 'Isi dulu qty nya!'}]}\r\n                                                                >\r\n                                                                    <Select defaultValue={type[0]}>\r\n                                                                        {type.map(t => (\r\n                                                                            <Option key={t}>{t}</Option>\r\n                                                                        ))}\r\n                                                                    </Select>\r\n                                                                </Form.Item>\r\n                                                            </Col>\r\n                                                            <Col lg={10} sm={24}>\r\n                                                                <Form.Item\r\n                                                                    label={\"Qty\"}\r\n                                                                    name={\"transactionQty\"}\r\n                                                                    rules={[{required: true, message: 'Isi dulu Harganya!'}]}\r\n                                                                >\r\n                                                                    <Select defaultValue={type[0]} style={{width: '100%'}}>\r\n                                                                        {type.map(t => (\r\n                                                                            <Option key={t}>{t}</Option>\r\n                                                                        ))}\r\n                                                                    </Select>\r\n                                                                </Form.Item>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                        <Form.Item>\r\n                                                            <Button type={\"primary\"} htmlType={\"submit\"}>Kirim</Button>\r\n                                                        </Form.Item>\r\n                                                    </Form>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Modal>\r\n                                    </Row>\r\n                                    <Row style={{marginTop: 20}}>\r\n                                        <Col span={24}>\r\n                                            <Table columns={columns} dataSource={data.filter(v => {\r\n                                                return v.type === tab.name\r\n                                            })}/>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n                            </Row>\r\n                        </TabPane>\r\n                    ))}\r\n                </Tabs>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default Produk;\r\n","D:\\Projects\\CODE\\self\\pos-new\\src\\pages\\App\\Analistik\\index.js",[],"D:\\Projects\\CODE\\self\\pos-new\\src\\pages\\App\\Pelanggan\\index.js",["66","67","68"],"import {useState} from 'react';\r\nimport {\r\n    Row,\r\n    Col,\r\n    Table,\r\n    Button,\r\n    Space,\r\n    Modal,\r\n    Form,\r\n    Input\r\n} from 'antd';\r\nimport './pelanggan.scss';\r\n\r\nconst Pelanggan = () => {\r\n    const [isVisible, setIsVisible] = useState(false);\r\n\r\n    const columns = [\r\n        {\r\n            title: 'Nama',\r\n            dataIndex: 'name',\r\n            sorter: (a, b) => a.name.length - b.name.length,\r\n            width: '60%'\r\n        },\r\n        {\r\n            title: 'Opsi',\r\n            dataIndex: 'option',\r\n            render: (text, record) => (\r\n                <Space size={\"middle\"}>\r\n                    <a>View</a>\r\n                    <a style={{color: 'orange'}}>Edit</a>\r\n                    <a style={{color: 'red'}}>Delete</a>\r\n                </Space>\r\n            ),\r\n        }\r\n    ];\r\n\r\n    const data = [\r\n        {\r\n            key: 1,\r\n            name: 'Refa'\r\n        },\r\n        {\r\n            key: 2,\r\n            name: 'Riski (iki)'\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <Row>\r\n            <Col span={24}>\r\n                <Row justify={'end'}>\r\n                    <Col flex={0}>\r\n                        <Button className=\"btnAdd\" onClick={() => setIsVisible(!isVisible)}>Tambah Transaksi</Button>\r\n                    </Col>\r\n\r\n                    <Modal\r\n                        footer={null}\r\n                        visible={isVisible}\r\n                        onOk={() => setIsVisible(!isVisible)}\r\n                        onCancel={() => setIsVisible(!isVisible)}\r\n                    >\r\n                        <Row justify={\"space-between\"} style={{marginTop: 25}}>\r\n                            <Col span={24} style={{padding: 10}}>\r\n                                <Form>\r\n                                    <Row justify={'space-between'}>\r\n                                        <Col span={24}>\r\n                                            <Form.Item\r\n                                                label={\"Nama\"}\r\n                                                name={\"customerName\"}\r\n                                                rules={[{required: true, message: 'Isi dulu namanya!'}]}\r\n                                            >\r\n                                                <Input placeholder={\"Nama\"} />\r\n                                            </Form.Item>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Form.Item>\r\n                                        <Button type={\"primary\"} htmlType={\"submit\"}>Kirim</Button>\r\n                                    </Form.Item>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                    </Modal>\r\n                </Row>\r\n            </Col>\r\n            <Col span={24} style={{marginTop: 20}}>\r\n                <Table columns={columns} dataSource={data} />\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default Pelanggan;\r\n","D:\\Projects\\CODE\\self\\pos-new\\src\\component\\index.js",[],"D:\\Projects\\CODE\\self\\pos-new\\src\\component\\CardCustom\\index.js",[],["69","70"],"D:\\Projects\\CODE\\self\\pos-new\\src\\pages\\User\\Profile\\index.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":3,"column":8,"nodeType":"77","messageId":"78","endLine":3,"endColumn":26},{"ruleId":"75","severity":1,"message":"79","line":22,"column":12,"nodeType":"77","messageId":"78","endLine":22,"endColumn":16},{"ruleId":"75","severity":1,"message":"80","line":22,"column":18,"nodeType":"77","messageId":"78","endLine":22,"endColumn":25},{"ruleId":"81","severity":1,"message":"82","line":126,"column":66,"nodeType":"83","messageId":"84","endLine":126,"endColumn":68},{"ruleId":"85","severity":1,"message":"86","line":29,"column":21,"nodeType":"87","endLine":29,"endColumn":24},{"ruleId":"85","severity":1,"message":"86","line":30,"column":21,"nodeType":"87","endLine":30,"endColumn":50},{"ruleId":"85","severity":1,"message":"86","line":31,"column":21,"nodeType":"87","endLine":31,"endColumn":47},{"ruleId":"71","replacedBy":"88"},{"ruleId":"73","replacedBy":"89"},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"no-unused-vars","'UserStackNavigator' is defined but never used.","Identifier","unusedVar","'form' is assigned a value but never used.","'setForm' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["90"],["91"],"no-global-assign","no-unsafe-negation"]